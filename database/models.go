// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
)

type Religion string

const (
	ReligionIslam    Religion = "islam"
	ReligionKristen  Religion = "kristen"
	ReligionKatolik  Religion = "katolik"
	ReligionKonghucu Religion = "konghucu"
	ReligionBuddha   Religion = "buddha"
	ReligionHindu    Religion = "hindu"
)

func (e *Religion) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Religion(s)
	case string:
		*e = Religion(s)
	default:
		return fmt.Errorf("unsupported scan type for Religion: %T", src)
	}
	return nil
}

type NullReligion struct {
	Religion Religion
	Valid    bool // Valid is true if Religion is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullReligion) Scan(value interface{}) error {
	if value == nil {
		ns.Religion, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Religion.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullReligion) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Religion), nil
}

type AuthLog struct {
	ID              int64
	UserID          int64
	ClientIp        string
	ClientUseragent string
	SchoolID        int64
	CreatedAt       sql.NullTime
	UpdatedAt       sql.NullTime
}

type Class struct {
	ID                int64
	Name              string
	GradeLevel        int32
	StudentsCount     int32
	MajorID           int64
	SemesterID        int64
	SchoolID          int64
	HomeroomTeacherID sql.NullInt64
	CreatedAt         sql.NullTime
	UpdatedAt         sql.NullTime
}

type Major struct {
	ID        int64
	Name      string
	ShortCode string
	SchoolID  int64
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
}

type School struct {
	ID               int64
	Name             string
	ShortCode        string
	SchoolNationalID string
	IsActive         sql.NullInt32
	Address          sql.NullString
	Latitude         sql.NullString
	Longitude        sql.NullString
	HeadmasterName   string
	HeadmasterID     string
	Website          sql.NullString
	Email            sql.NullString
	LogoUrl          sql.NullString
	AppName          string
	CreatedAt        sql.NullTime
	UpdatedAt        sql.NullTime
}

type Semester struct {
	ID        int64
	Name      string
	Cycle     int32
	Year      int32
	IsActive  sql.NullInt32
	SchoolID  int64
	CreatedAt sql.NullTime
	UpdatedAt sql.NullTime
}

type Student struct {
	ID                int64
	Name              string
	NationalStudentID string
	SchoolStudentID   string
	Religion          Religion
	UserID            int64
	SchoolID          int64
	ClassID           sql.NullInt64
	SemesterID        int64
	CreatedAt         sql.NullTime
	UpdatedAt         sql.NullTime
}

type Subject struct {
	ID          int64
	Name        string
	ShortCode   string
	IsActive    sql.NullInt32
	IsUniversal int32
	MajorID     int64
	SchoolID    int64
	SemesterID  int64
	CreatedAt   sql.NullTime
	UpdatedAt   sql.NullTime
}

type SubjectAccess struct {
	ID        int64
	SchoolID  int64
	ClassID   int64
	SubjectID int64
}

type SubjectTeacherAccess struct {
	ID        int64
	SubjectID int64
	SchoolID  int64
	TeacherID int64
}

type Teacher struct {
	ID                int64
	Name              string
	NationalTeacherID string
	SchoolID          int64
	UserID            int64
	SemesterID        int64
	CreatedAt         sql.NullTime
	UpdatedAt         sql.NullTime
}

type User struct {
	ID            int64
	Name          string
	IsActive      sql.NullInt32
	Email         string
	Password      string
	UserAccessID  sql.NullInt64
	UserStudentID sql.NullInt64
	UserTeacherID sql.NullInt64
	SchoolID      int64
	CreatedAt     sql.NullTime
	UpdatedAt     sql.NullTime
}

type UserAccess struct {
	ID        int64
	UserID    int64
	SchoolID  int64
	IsStudent int32
	IsAdmin   int32
	IsTeacher int32
}
